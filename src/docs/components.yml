components:
  schemas:
    UserInfos:
      type: object
      properties:
        _id:
          type: string
        firstname:
          type: string
        middlename:
          type: string
        lastname:
          type: string
      example:
        _id: 1212-12233-23
        firstname: John
        middlename: J
        lastname: Smith
    UserInfo:
      type: object
      properties:
        firstname:
          type: string
        middlename:
          type: string
        lastname:
          type: string
        dob:
          type: date
        sinNumber:
          type: number
        maritalStatusCode:
          type: number
      example:
        firstname: John
        middlename: J
        lastname: Smith
        dob: 1990-11-20
        sinNumber: 123456789
        maritalStatusCode: 1
    UserPref:
      type: object
      properties:
        firstName:
          type: string
        userPref:
          type: object
          properties:
            webLanguageCode:
              type: string
            correspondenceLanguageCode:
              type: string
            brailleTtyKeyboard:
              type: string
            preferredCurrencyCode:
              type: date
            timeZoneCode:
              type: number
            timeFormatCode:
              type: number
      example:
        firstName: John Doe
        userPref:
          webLanguageCode: 1
          correspondenceLanguageCode: 2
          brailleTtyKeyboard: true
          preferredCurrencyCode: 1
          timeZoneCode: 2
          timeFormatCode: 1
    UserContact:
      type: object
      properties:
        firstName:
          type: string
        userContact:
          type: object
          properties:
            phone:
              type: string
            email:
              type: string
            userAddresses:
              type: array
              items:
                type: object
                properties:
                  addressTypeCode:
                    type: number
                  streetNumber:
                    type: number
                  streetName:
                    type: string
                  aptNumber:
                    type: number
                  postalCode:
                    type: string
                  city:
                    type: string
                  countryCode:
                    type: string
      example:
        firstName: John Doe
        userContact:
          phone: 6132227777
          email: name@example.com
          userAddresses:
            - addressTypeCode: 1
              streetNumber: 122
              streetName: Main st
              aptNumber: 1234
              postalCode: K2Y3K2
              city: Ottawa
              country: CA
            - addressTypeCode: 2
              streetNumber: 122
              streetName: Main st
              aptNumber: null
              postalCode: K2Y3K2
              city: Ottawa
              country: CA
    UserAccount:
      type: object
      properties:
        firstName:
          type: string
        userFinancialInfo:
          type: object
          properties:
            institutionNumber:
              type: string
            transitNumber:
              type: number
            accountNumber:
              type: number
      example:
        firstName: John Doe
        userFinancialInfo:
          institutionNumber: "010"
          transitNumber: 232232
          accountNumber: 123434343
    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateId:
      description: userId already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Id already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
